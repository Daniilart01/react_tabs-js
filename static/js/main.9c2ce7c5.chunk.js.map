{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","setSelectedTabId","getIsActive","tab","undefined","find","tabsTab","id","map","index","className","href","onClick","handleClick","title","content","App","useState","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,SAAC,GAGE,IAHAC,EAGD,EAHCA,KACrBC,EAEoB,EAFpBA,cAEAC,GAAoB,EADpBC,iBACoB,EAApBD,eAOME,EAAc,SAACC,GACnB,YAA2DC,IAAvDN,EAAKO,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAOR,MACrCI,EAAII,KAAOT,EAAK,GAAGS,IAIlBJ,EAAII,KAAOR,EAHN,YAOF,IAGT,OACE,6BACGD,EAAKU,KAAI,SAACL,EAAKM,GAAN,OACR,oBAEE,UAAQ,MACRC,UAAWR,EAAYC,GAHzB,SAKE,mBACEQ,KAAI,WAAMR,EAAII,IACd,UAAQ,UACRK,QAAS,kBA9BC,SAACT,GACfA,EAAII,KAAOR,GACbC,EAAcF,EAAKO,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAOJ,EAAII,OA4BjCM,CAAYV,IAH7B,SAKGA,EAAIW,SATFX,EAAII,UCrBNT,EAAO,CAClB,CAAES,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASnB,EAAK,GAAGS,IAA3D,mBAAOR,EAAP,KAAsBE,EAAtB,KAEMiB,EAAcpB,EAAKO,MAAK,SAAAF,GAAG,OAAIA,EAAII,KAAOR,KAEhD,OACE,sBAAKW,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBQ,EAAcA,EAAYJ,MAAQhB,EAAK,GAAGgB,SAGhE,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAACG,GACdF,EAAiBE,EAAII,SAK3B,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGQ,EAAcA,EAAYH,QAAUjB,EAAK,GAAGiB,iBChCvDI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9c2ce7c5.chunk.js","sourcesContent":["export const Tabs = ({ tabs,\n  selectedTabId,\n  setSelectedTabId,\n  onTabSelected }) => {\n  const handleClick = (tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tabs.find(tabsTab => tabsTab.id === tab.id));\n    }\n  };\n\n  const getIsActive = (tab) => {\n    if (tabs.find(tabsTab => tabsTab.id === selectedTabId) === undefined\n    && tab.id === tabs[0].id) {\n      return 'is-active';\n    }\n\n    if (tab.id === selectedTabId) {\n      return 'is-active';\n    }\n\n    return '';\n  };\n\n  return (\n    <ul>\n      {tabs.map((tab, index) => (\n        <li\n          key={tab.id}\n          data-cy=\"Tab\"\n          className={getIsActive(tab)}\n        >\n          <a\n            href={`#${tab.id}`}\n            data-cy=\"TabLink\"\n            onClick={() => handleClick(tab)}\n          >\n            {tab.title}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab ? selectedTab.title : tabs[0].title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <Tabs\n            tabs={tabs}\n            selectedTabId={selectedTabId}\n            onTabSelected={(tab) => {\n              setSelectedTabId(tab.id);\n            }}\n          />\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab ? selectedTab.content : tabs[0].content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}