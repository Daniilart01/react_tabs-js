{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","setSelectedTabId","map","tab","index","className","tabsList","tabId","id","selectedId","undefined","find","href","onClick","click","title","content","App","useState","getSelectedTab","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,SAAC,GAGE,IAHAC,EAGD,EAHCA,KACrBC,EAEoB,EAFpBA,cAEAC,GAAoB,EADpBC,iBACoB,EAApBD,eAgBA,OACE,6BACGF,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACR,oBAEE,UAAQ,MACRC,WAfaC,EAeUR,EAfAS,EAeMJ,EAAIK,GAfHC,EAeOV,EAdvCQ,IAAUE,QACyCC,IAAhDJ,EAASK,MAAK,SAAAR,GAAG,OAAIA,EAAIK,KAAOC,KAC9B,YAGF,IAMH,SAKE,mBACEG,KAAI,WAAMT,EAAIK,IACd,UAAQ,UACRK,QAAS,kBA1BL,SAACN,EAAOE,EAAYH,GAC5BC,IAAUE,GACZT,EAAcM,EAASK,MAAK,SAAAR,GAAG,OAAII,IAAUJ,EAAIK,OAwB5BM,CAAMX,EAAIK,GAAIT,EAAeD,IAH9C,SAKGK,EAAIY,SATFZ,EAAIK,IAbG,IAACF,EAAUC,EAAOE,QCJ3BX,EAAO,CAClB,CAAEU,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASpB,EAAK,GAAGU,IAA3D,mBAAOT,EAAP,KAAsBE,EAAtB,KAEMkB,EAAiB,SAACb,EAAUG,GAChC,IAAMW,EAAcd,EAASK,MAAK,SAAAR,GAAG,OAAIA,EAAIK,KAAOC,KAEpD,YAAoBC,IAAhBU,EACKd,EAAS,GAGXc,GAGT,OACE,sBAAKf,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBc,EAAerB,EAAMC,GAAegB,SAG1D,sBAAK,UAAQ,gBAAb,UACE,qBAAKV,UAAU,gBAAf,SACE,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAACG,GAEZF,OADUS,IAARP,EACeL,EAAK,GAAGU,GAERL,EAAIK,SAM7B,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGc,EAAerB,EAAMC,GAAeiB,iBC5C/CK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.97af7c20.chunk.js","sourcesContent":["export const Tabs = ({ tabs,\n  selectedTabId,\n  setSelectedTabId,\n  onTabSelected }) => {\n  const click = (tabId, selectedId, tabsList) => {\n    if (tabId !== selectedId) {\n      onTabSelected(tabsList.find(tab => tabId === tab.id));\n    }\n  };\n\n  const getIsActive = (tabsList, tabId, selectedId) => {\n    if (tabId === selectedId\n        || tabsList.find(tab => tab.id === selectedId) === undefined) {\n      return 'is-active';\n    }\n\n    return '';\n  };\n\n  return (\n    <ul>\n      {tabs.map((tab, index) => (\n        <li\n          key={tab.id}\n          data-cy=\"Tab\"\n          className={getIsActive(tabs, tab.id, selectedTabId)}\n        >\n          <a\n            href={`#${tab.id}`}\n            data-cy=\"TabLink\"\n            onClick={() => click(tab.id, selectedTabId, tabs)}\n          >\n            {tab.title}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const getSelectedTab = (tabsList, selectedId) => {\n    const selectedTab = tabsList.find(tab => tab.id === selectedId);\n\n    if (selectedTab === undefined) {\n      return tabsList[0];\n    }\n\n    return selectedTab;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getSelectedTab(tabs, selectedTabId).title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <Tabs\n            tabs={tabs}\n            selectedTabId={selectedTabId}\n            onTabSelected={(tab) => {\n              if (tab === undefined) {\n                setSelectedTabId(tabs[0].id);\n              } else {\n                setSelectedTabId(tab.id);\n              }\n            }}\n          />\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {getSelectedTab(tabs, selectedTabId).content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}